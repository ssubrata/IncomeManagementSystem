//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Desktop
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TruckDbContext : DbContext
    {
        public TruckDbContext()
            : base("name=TruckDbContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Income> Incomes { get; set; }
        public virtual DbSet<IncomeSource> IncomeSources { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Spend> Spends { get; set; }
        public virtual DbSet<SpendSource> SpendSources { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Log> Logs { get; set; }
    
        public virtual int SpGetIncome(Nullable<int> sourceId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var sourceIdParameter = sourceId.HasValue ?
                new ObjectParameter("sourceId", sourceId) :
                new ObjectParameter("sourceId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpGetIncome", sourceIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int SpGetSpend(Nullable<int> sourceId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var sourceIdParameter = sourceId.HasValue ?
                new ObjectParameter("sourceId", sourceId) :
                new ObjectParameter("sourceId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpGetSpend", sourceIdParameter, fromDateParameter, toDateParameter);
        }
    }
}
